/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthenticatedImport } from './routes/_unauthenticated'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as UnauthenticatedSignInImport } from './routes/_unauthenticated/sign-in'
import { Route as UnauthenticatedResetPasswordImport } from './routes/_unauthenticated/reset-password'
import { Route as AuthenticatedAccountImport } from './routes/_authenticated/account'

// Create/Update Routes

const UnauthenticatedRoute = UnauthenticatedImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedSignInRoute = UnauthenticatedSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => UnauthenticatedRoute,
} as any)

const UnauthenticatedResetPasswordRoute =
  UnauthenticatedResetPasswordImport.update({
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => UnauthenticatedRoute,
  } as any)

const AuthenticatedAccountRoute = AuthenticatedAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/account': {
      id: '/_authenticated/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthenticatedAccountImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_unauthenticated/reset-password': {
      id: '/_unauthenticated/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof UnauthenticatedResetPasswordImport
      parentRoute: typeof UnauthenticatedImport
    }
    '/_unauthenticated/sign-in': {
      id: '/_unauthenticated/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof UnauthenticatedSignInImport
      parentRoute: typeof UnauthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAccountRoute: typeof AuthenticatedAccountRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAccountRoute: AuthenticatedAccountRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface UnauthenticatedRouteChildren {
  UnauthenticatedResetPasswordRoute: typeof UnauthenticatedResetPasswordRoute
  UnauthenticatedSignInRoute: typeof UnauthenticatedSignInRoute
}

const UnauthenticatedRouteChildren: UnauthenticatedRouteChildren = {
  UnauthenticatedResetPasswordRoute: UnauthenticatedResetPasswordRoute,
  UnauthenticatedSignInRoute: UnauthenticatedSignInRoute,
}

const UnauthenticatedRouteWithChildren = UnauthenticatedRoute._addFileChildren(
  UnauthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof UnauthenticatedRouteWithChildren
  '/account': typeof AuthenticatedAccountRoute
  '/reset-password': typeof UnauthenticatedResetPasswordRoute
  '/sign-in': typeof UnauthenticatedSignInRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof UnauthenticatedRouteWithChildren
  '/account': typeof AuthenticatedAccountRoute
  '/reset-password': typeof UnauthenticatedResetPasswordRoute
  '/sign-in': typeof UnauthenticatedSignInRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteWithChildren
  '/_authenticated/account': typeof AuthenticatedAccountRoute
  '/_unauthenticated/reset-password': typeof UnauthenticatedResetPasswordRoute
  '/_unauthenticated/sign-in': typeof UnauthenticatedSignInRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/account' | '/reset-password' | '/sign-in'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/account' | '/reset-password' | '/sign-in'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_authenticated/account'
    | '/_unauthenticated/reset-password'
    | '/_unauthenticated/sign-in'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  UnauthenticatedRoute: typeof UnauthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  UnauthenticatedRoute: UnauthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_unauthenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/account"
      ]
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated.tsx",
      "children": [
        "/_unauthenticated/reset-password",
        "/_unauthenticated/sign-in"
      ]
    },
    "/_authenticated/account": {
      "filePath": "_authenticated/account.tsx",
      "parent": "/_authenticated"
    },
    "/_unauthenticated/reset-password": {
      "filePath": "_unauthenticated/reset-password.tsx",
      "parent": "/_unauthenticated"
    },
    "/_unauthenticated/sign-in": {
      "filePath": "_unauthenticated/sign-in.tsx",
      "parent": "/_unauthenticated"
    }
  }
}
ROUTE_MANIFEST_END */
