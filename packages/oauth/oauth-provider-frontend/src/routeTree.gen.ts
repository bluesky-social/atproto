/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AccountMinimalLayoutImport } from './routes/account/_minimalLayout'
import { Route as AccountAppLayoutImport } from './routes/account/_appLayout'
import { Route as AccountMinimalLayoutIndexImport } from './routes/account/_minimalLayout/index'
import { Route as AccountMinimalLayoutSignInImport } from './routes/account/_minimalLayout/sign-in'
import { Route as AccountMinimalLayoutResetPasswordImport } from './routes/account/_minimalLayout/reset-password'
import { Route as AccountMinimalLayoutBrandingImport } from './routes/account/_minimalLayout/branding'
import { Route as AccountAppLayoutSubImport } from './routes/account/_appLayout/$sub'

// Create Virtual Routes

const AccountImport = createFileRoute('/account')()

// Create/Update Routes

const AccountRoute = AccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const AccountMinimalLayoutRoute = AccountMinimalLayoutImport.update({
  id: '/_minimalLayout',
  getParentRoute: () => AccountRoute,
} as any)

const AccountAppLayoutRoute = AccountAppLayoutImport.update({
  id: '/_appLayout',
  getParentRoute: () => AccountRoute,
} as any)

const AccountMinimalLayoutIndexRoute = AccountMinimalLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AccountMinimalLayoutRoute,
} as any)

const AccountMinimalLayoutSignInRoute = AccountMinimalLayoutSignInImport.update(
  {
    id: '/sign-in',
    path: '/sign-in',
    getParentRoute: () => AccountMinimalLayoutRoute,
  } as any,
)

const AccountMinimalLayoutResetPasswordRoute =
  AccountMinimalLayoutResetPasswordImport.update({
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => AccountMinimalLayoutRoute,
  } as any)

const AccountMinimalLayoutBrandingRoute =
  AccountMinimalLayoutBrandingImport.update({
    id: '/branding',
    path: '/branding',
    getParentRoute: () => AccountMinimalLayoutRoute,
  } as any)

const AccountAppLayoutSubRoute = AccountAppLayoutSubImport.update({
  id: '/$sub',
  path: '/$sub',
  getParentRoute: () => AccountAppLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/account/_appLayout': {
      id: '/account/_appLayout'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountAppLayoutImport
      parentRoute: typeof AccountRoute
    }
    '/account/_minimalLayout': {
      id: '/account/_minimalLayout'
      path: ''
      fullPath: '/account'
      preLoaderRoute: typeof AccountMinimalLayoutImport
      parentRoute: typeof AccountImport
    }
    '/account/_appLayout/$sub': {
      id: '/account/_appLayout/$sub'
      path: '/$sub'
      fullPath: '/account/$sub'
      preLoaderRoute: typeof AccountAppLayoutSubImport
      parentRoute: typeof AccountAppLayoutImport
    }
    '/account/_minimalLayout/branding': {
      id: '/account/_minimalLayout/branding'
      path: '/branding'
      fullPath: '/account/branding'
      preLoaderRoute: typeof AccountMinimalLayoutBrandingImport
      parentRoute: typeof AccountMinimalLayoutImport
    }
    '/account/_minimalLayout/reset-password': {
      id: '/account/_minimalLayout/reset-password'
      path: '/reset-password'
      fullPath: '/account/reset-password'
      preLoaderRoute: typeof AccountMinimalLayoutResetPasswordImport
      parentRoute: typeof AccountMinimalLayoutImport
    }
    '/account/_minimalLayout/sign-in': {
      id: '/account/_minimalLayout/sign-in'
      path: '/sign-in'
      fullPath: '/account/sign-in'
      preLoaderRoute: typeof AccountMinimalLayoutSignInImport
      parentRoute: typeof AccountMinimalLayoutImport
    }
    '/account/_minimalLayout/': {
      id: '/account/_minimalLayout/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof AccountMinimalLayoutIndexImport
      parentRoute: typeof AccountMinimalLayoutImport
    }
  }
}

// Create and export the route tree

interface AccountAppLayoutRouteChildren {
  AccountAppLayoutSubRoute: typeof AccountAppLayoutSubRoute
}

const AccountAppLayoutRouteChildren: AccountAppLayoutRouteChildren = {
  AccountAppLayoutSubRoute: AccountAppLayoutSubRoute,
}

const AccountAppLayoutRouteWithChildren =
  AccountAppLayoutRoute._addFileChildren(AccountAppLayoutRouteChildren)

interface AccountMinimalLayoutRouteChildren {
  AccountMinimalLayoutBrandingRoute: typeof AccountMinimalLayoutBrandingRoute
  AccountMinimalLayoutResetPasswordRoute: typeof AccountMinimalLayoutResetPasswordRoute
  AccountMinimalLayoutSignInRoute: typeof AccountMinimalLayoutSignInRoute
  AccountMinimalLayoutIndexRoute: typeof AccountMinimalLayoutIndexRoute
}

const AccountMinimalLayoutRouteChildren: AccountMinimalLayoutRouteChildren = {
  AccountMinimalLayoutBrandingRoute: AccountMinimalLayoutBrandingRoute,
  AccountMinimalLayoutResetPasswordRoute:
    AccountMinimalLayoutResetPasswordRoute,
  AccountMinimalLayoutSignInRoute: AccountMinimalLayoutSignInRoute,
  AccountMinimalLayoutIndexRoute: AccountMinimalLayoutIndexRoute,
}

const AccountMinimalLayoutRouteWithChildren =
  AccountMinimalLayoutRoute._addFileChildren(AccountMinimalLayoutRouteChildren)

interface AccountRouteChildren {
  AccountAppLayoutRoute: typeof AccountAppLayoutRouteWithChildren
  AccountMinimalLayoutRoute: typeof AccountMinimalLayoutRouteWithChildren
}

const AccountRouteChildren: AccountRouteChildren = {
  AccountAppLayoutRoute: AccountAppLayoutRouteWithChildren,
  AccountMinimalLayoutRoute: AccountMinimalLayoutRouteWithChildren,
}

const AccountRouteWithChildren =
  AccountRoute._addFileChildren(AccountRouteChildren)

export interface FileRoutesByFullPath {
  '/account': typeof AccountMinimalLayoutRouteWithChildren
  '/account/$sub': typeof AccountAppLayoutSubRoute
  '/account/branding': typeof AccountMinimalLayoutBrandingRoute
  '/account/reset-password': typeof AccountMinimalLayoutResetPasswordRoute
  '/account/sign-in': typeof AccountMinimalLayoutSignInRoute
  '/account/': typeof AccountMinimalLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/account': typeof AccountMinimalLayoutIndexRoute
  '/account/$sub': typeof AccountAppLayoutSubRoute
  '/account/branding': typeof AccountMinimalLayoutBrandingRoute
  '/account/reset-password': typeof AccountMinimalLayoutResetPasswordRoute
  '/account/sign-in': typeof AccountMinimalLayoutSignInRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/account': typeof AccountRouteWithChildren
  '/account/_appLayout': typeof AccountAppLayoutRouteWithChildren
  '/account/_minimalLayout': typeof AccountMinimalLayoutRouteWithChildren
  '/account/_appLayout/$sub': typeof AccountAppLayoutSubRoute
  '/account/_minimalLayout/branding': typeof AccountMinimalLayoutBrandingRoute
  '/account/_minimalLayout/reset-password': typeof AccountMinimalLayoutResetPasswordRoute
  '/account/_minimalLayout/sign-in': typeof AccountMinimalLayoutSignInRoute
  '/account/_minimalLayout/': typeof AccountMinimalLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/account'
    | '/account/$sub'
    | '/account/branding'
    | '/account/reset-password'
    | '/account/sign-in'
    | '/account/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/account'
    | '/account/$sub'
    | '/account/branding'
    | '/account/reset-password'
    | '/account/sign-in'
  id:
    | '__root__'
    | '/account'
    | '/account/_appLayout'
    | '/account/_minimalLayout'
    | '/account/_appLayout/$sub'
    | '/account/_minimalLayout/branding'
    | '/account/_minimalLayout/reset-password'
    | '/account/_minimalLayout/sign-in'
    | '/account/_minimalLayout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AccountRoute: typeof AccountRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AccountRoute: AccountRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/account"
      ]
    },
    "/account": {
      "filePath": "account",
      "children": [
        "/account/_appLayout",
        "/account/_minimalLayout"
      ]
    },
    "/account/_appLayout": {
      "filePath": "account/_appLayout.tsx",
      "parent": "/account",
      "children": [
        "/account/_appLayout/$sub"
      ]
    },
    "/account/_minimalLayout": {
      "filePath": "account/_minimalLayout.tsx",
      "parent": "/account",
      "children": [
        "/account/_minimalLayout/branding",
        "/account/_minimalLayout/reset-password",
        "/account/_minimalLayout/sign-in",
        "/account/_minimalLayout/"
      ]
    },
    "/account/_appLayout/$sub": {
      "filePath": "account/_appLayout/$sub.tsx",
      "parent": "/account/_appLayout"
    },
    "/account/_minimalLayout/branding": {
      "filePath": "account/_minimalLayout/branding.tsx",
      "parent": "/account/_minimalLayout"
    },
    "/account/_minimalLayout/reset-password": {
      "filePath": "account/_minimalLayout/reset-password.tsx",
      "parent": "/account/_minimalLayout"
    },
    "/account/_minimalLayout/sign-in": {
      "filePath": "account/_minimalLayout/sign-in.tsx",
      "parent": "/account/_minimalLayout"
    },
    "/account/_minimalLayout/": {
      "filePath": "account/_minimalLayout/index.tsx",
      "parent": "/account/_minimalLayout"
    }
  }
}
ROUTE_MANIFEST_END */
