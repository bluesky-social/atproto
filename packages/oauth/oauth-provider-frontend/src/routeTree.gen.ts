/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MinimalLayoutImport } from './routes/_minimalLayout'
import { Route as AppLayoutImport } from './routes/_appLayout'
import { Route as MinimalLayoutIndexImport } from './routes/_minimalLayout/index'
import { Route as MinimalLayoutSignInImport } from './routes/_minimalLayout/sign-in'
import { Route as MinimalLayoutResetPasswordImport } from './routes/_minimalLayout/reset-password'
import { Route as AppLayoutDidImport } from './routes/_appLayout/$did'

// Create/Update Routes

const MinimalLayoutRoute = MinimalLayoutImport.update({
  id: '/_minimalLayout',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/_appLayout',
  getParentRoute: () => rootRoute,
} as any)

const MinimalLayoutIndexRoute = MinimalLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MinimalLayoutRoute,
} as any)

const MinimalLayoutSignInRoute = MinimalLayoutSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => MinimalLayoutRoute,
} as any)

const MinimalLayoutResetPasswordRoute = MinimalLayoutResetPasswordImport.update(
  {
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => MinimalLayoutRoute,
  } as any,
)

const AppLayoutDidRoute = AppLayoutDidImport.update({
  id: '/$did',
  path: '/$did',
  getParentRoute: () => AppLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_appLayout': {
      id: '/_appLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_minimalLayout': {
      id: '/_minimalLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MinimalLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_appLayout/$did': {
      id: '/_appLayout/$did'
      path: '/$did'
      fullPath: '/$did'
      preLoaderRoute: typeof AppLayoutDidImport
      parentRoute: typeof AppLayoutImport
    }
    '/_minimalLayout/reset-password': {
      id: '/_minimalLayout/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof MinimalLayoutResetPasswordImport
      parentRoute: typeof MinimalLayoutImport
    }
    '/_minimalLayout/sign-in': {
      id: '/_minimalLayout/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof MinimalLayoutSignInImport
      parentRoute: typeof MinimalLayoutImport
    }
    '/_minimalLayout/': {
      id: '/_minimalLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MinimalLayoutIndexImport
      parentRoute: typeof MinimalLayoutImport
    }
  }
}

// Create and export the route tree

interface AppLayoutRouteChildren {
  AppLayoutDidRoute: typeof AppLayoutDidRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutDidRoute: AppLayoutDidRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface MinimalLayoutRouteChildren {
  MinimalLayoutResetPasswordRoute: typeof MinimalLayoutResetPasswordRoute
  MinimalLayoutSignInRoute: typeof MinimalLayoutSignInRoute
  MinimalLayoutIndexRoute: typeof MinimalLayoutIndexRoute
}

const MinimalLayoutRouteChildren: MinimalLayoutRouteChildren = {
  MinimalLayoutResetPasswordRoute: MinimalLayoutResetPasswordRoute,
  MinimalLayoutSignInRoute: MinimalLayoutSignInRoute,
  MinimalLayoutIndexRoute: MinimalLayoutIndexRoute,
}

const MinimalLayoutRouteWithChildren = MinimalLayoutRoute._addFileChildren(
  MinimalLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MinimalLayoutRouteWithChildren
  '/$did': typeof AppLayoutDidRoute
  '/reset-password': typeof MinimalLayoutResetPasswordRoute
  '/sign-in': typeof MinimalLayoutSignInRoute
  '/': typeof MinimalLayoutIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AppLayoutRouteWithChildren
  '/$did': typeof AppLayoutDidRoute
  '/reset-password': typeof MinimalLayoutResetPasswordRoute
  '/sign-in': typeof MinimalLayoutSignInRoute
  '/': typeof MinimalLayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_appLayout': typeof AppLayoutRouteWithChildren
  '/_minimalLayout': typeof MinimalLayoutRouteWithChildren
  '/_appLayout/$did': typeof AppLayoutDidRoute
  '/_minimalLayout/reset-password': typeof MinimalLayoutResetPasswordRoute
  '/_minimalLayout/sign-in': typeof MinimalLayoutSignInRoute
  '/_minimalLayout/': typeof MinimalLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/$did' | '/reset-password' | '/sign-in' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/$did' | '/reset-password' | '/sign-in' | '/'
  id:
    | '__root__'
    | '/_appLayout'
    | '/_minimalLayout'
    | '/_appLayout/$did'
    | '/_minimalLayout/reset-password'
    | '/_minimalLayout/sign-in'
    | '/_minimalLayout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
  MinimalLayoutRoute: typeof MinimalLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
  MinimalLayoutRoute: MinimalLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_appLayout",
        "/_minimalLayout"
      ]
    },
    "/_appLayout": {
      "filePath": "_appLayout.tsx",
      "children": [
        "/_appLayout/$did"
      ]
    },
    "/_minimalLayout": {
      "filePath": "_minimalLayout.tsx",
      "children": [
        "/_minimalLayout/reset-password",
        "/_minimalLayout/sign-in",
        "/_minimalLayout/"
      ]
    },
    "/_appLayout/$did": {
      "filePath": "_appLayout/$did.tsx",
      "parent": "/_appLayout"
    },
    "/_minimalLayout/reset-password": {
      "filePath": "_minimalLayout/reset-password.tsx",
      "parent": "/_minimalLayout"
    },
    "/_minimalLayout/sign-in": {
      "filePath": "_minimalLayout/sign-in.tsx",
      "parent": "/_minimalLayout"
    },
    "/_minimalLayout/": {
      "filePath": "_minimalLayout/index.tsx",
      "parent": "/_minimalLayout"
    }
  }
}
ROUTE_MANIFEST_END */
