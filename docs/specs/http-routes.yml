openapi: 3.0.3
info:
  title: ADX HTTP Routes
  description: |-
    ADX exchanges data using HTTP/S. This document enumerates the routes and their expected behaviors.
  license:
    name: MIT
  version: 0.0.0
externalDocs:
  description: Learn more about ADX
  url: https://github.com/bluesky-social/adx/
servers:
  - url: http://localhost:2583
tags:
  - name: protocol
    description: Server-to-server protocol operations.
  - name: account
    description: Account management API.
  - name: session
    description: Session management API.
  - name: repo
    description: Repository API.
  - name: view
    description: View API.
paths:
  /.well-known/adx-did:
    get:
      tags:
        - protocol
      summary: Provides the DID of the repo indicated by the Host parameter.
  /.adx/v1/data/root:
    get:
      tags:
        - protocol
      summary: Gets the current root CID of a repo.
      parameters:
        - name: did
          in: query
          description: The DID of the repo to request.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoRoot'
  /.adx/v1/data/repo:
    get:
      tags:
        - protocol
      summary: Gets the repo state as a CAR file.
      parameters:
        - name: did
          in: query
          description: The DID of the repo to request.
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: The CID of a previous commit.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /.adx/v1/data/repo/{did}:
    post:
      tags:
        - protocol
      summary: Writes commits to a repo.
      parameters:
        - name: did
          in: path
          description: The DID of the repo to modify.
          required: true
          schema:
            type: string
      requestBody:
        description: A CAR file.
        required: true
        content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      responses:
        '200':
          description: Successful operation
  /.adx/v1/account:
    get:
      tags:
        - account
      summary: Get information about the account.
    post:
      tags:
        - account
      summary: Create an account.
    delete:
      tags:
        - account
      summary: Delete an account.
  /.adx/v1/session:
    get:
      tags:
        - session
      summary: Get information about the current session.
    post:
      tags:
        - session
      summary: Create an session.
    delete:
      tags:
        - session
      summary: Delete the current session.
  /.adx/v1/api/repo/{did}:
    get:
      tags:
        - repo
      summary: Get information about the repo, including the list of collections.
      parameters:
        - name: did
          in: path
          description: The DID of the repo to request.
          required: true
          schema:
            type: string
      responses:
        '200':
            description: Successful operation
    post:
      tags:
        - repo
      summary: Apply a batch transaction of creates, puts, and deletes.
      parameters:
        - name: did
          in: path
          description: The DID of the repo to modify.
          required: true
          schema:
            type: string
        - name: validate
          in: query
          description: Validate the record? Defaults to true.
          required: false
          schema:
            type: string
            enum:
              - t
              - true
              - f
              - false
      requestBody:
        description: The modifications to apply.
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchWrite'
      responses:
        '200':
            description: Successful operation
  /.adx/v1/api/repo/{did}/c/{namespace}/{dataset}:
    get:
      tags:
        - repo
      summary: Get information about the repo, including the list of collections.
      parameters:
        - name: did
          in: path
          description: The DID of the repo to request.
          required: true
          schema:
            type: string
        - name: namespace
          in: path
          description: The namespace of the collection to request.
          required: true
          schema:
            type: string
        - name: dataset
          in: path
          description: The name of the collection to request.
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: The number of records to return. Defaults to 50. TODO- max number?
          required: false
          schema:
            type: number
        - name: before
          in: query
          description: A TID to filter the range of records returned.
          required: false
          schema:
            type: string
        - name: after
          in: query
          description: A TID to filter the range of records returned.
          required: false
          schema:
            type: string
      responses:
        '200':
            description: Successful operation
    post:
      tags:
        - repo
      summary: Create a new record.
      parameters:
        - name: did
          in: path
          description: The DID of the repo to modify.
          required: true
          schema:
            type: string
        - name: namespace
          in: path
          description: The namespace of the collection to write to.
          required: true
          schema:
            type: string
        - name: dataset
          in: path
          description: The name of the collection to write to.
          required: true
          schema:
            type: string
        - name: validate
          in: query
          description: Validate the record? Defaults to true.
          required: false
          schema:
            type: string
            enum:
              - t
              - true
              - f
              - false
      requestBody:
        description: The record to create.
        required: true
        content:
            application/json:
              schema: {}
      responses:
        '200':
            description: Successful operation
  /.adx/v1/api/repo/{did}/c/{namespace}/{dataset}/r/{tid}:
    get:
      tags:
        - repo
      summary: Get information about the repo, including the list of collections.
      parameters:
        - name: did
          in: path
          description: The DID of the repo to request.
          required: true
          schema:
            type: string
        - name: namespace
          in: path
          description: The namespace of the collection to request.
          required: true
          schema:
            type: string
        - name: dataset
          in: path
          description: The name of the collection to request.
          required: true
          schema:
            type: string
        - name: tid
          in: path
          description: The TID of the record to request.
          required: true
          schema:
            type: string
      responses:
        '200':
            description: Successful operation
    put:
      tags:
        - repo
      summary: Write a record.
      parameters:
        - name: did
          in: path
          description: The DID of the repo to modify.
          required: true
          schema:
            type: string
        - name: namespace
          in: path
          description: The namespace of the collection to write to.
          required: true
          schema:
            type: string
        - name: dataset
          in: path
          description: The name of the collection to write to.
          required: true
          schema:
            type: string
        - name: tid
          in: path
          description: The TID of the record to write to.
          required: true
          schema:
            type: string
        - name: validate
          in: query
          description: Validate the record? Defaults to true.
          required: false
          schema:
            type: string
            enum:
              - t
              - true
              - f
              - false
      requestBody:
        description: The record to write.
        required: true
        content:
            application/json:
              schema: {}
      responses:
        '200':
            description: Successful operation
    delete:
      tags:
        - repo
      summary: Delete a record.
      parameters:
        - name: did
          in: path
          description: The DID of the repo to modify.
          required: true
          schema:
            type: string
        - name: namespace
          in: path
          description: The namespace of the collection to write to.
          required: true
          schema:
            type: string
        - name: dataset
          in: path
          description: The name of the collection to write to.
          required: true
          schema:
            type: string
        - name: tid
          in: path
          description: The TID of the record to write to.
          required: true
          schema:
            type: string
      responses:
        '200':
            description: Successful operation
  /.adx/v1/api/view/{viewId}:
    get:
      tags:
        - view
      summary: Fetch a view.
      parameters:
        - name: viewId
          in: path
          description: The ID of the view to request.
          required: true
          schema:
            type: string
      responses:
        '200':
            description: Successful operation
components:
  schemas:
    RepoRoot:
      type: object
      properties:
        root:
          type: string
    BatchWrite:
      type: object
      properties:
        writes:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/BatchWriteCreate'
              - $ref: '#/components/schemas/BatchWriteUpdate'
              - $ref: '#/components/schemas/BatchWriteDelete'
    BatchWriteCreate:
      type: object
      properties:
        action:
          type: string
          enum: [create]
        collection:
          type: string
        value: {}
    BatchWriteUpdate:
      type: object
      properties:
        action:
          type: string
          enum: [update]
        collection:
          type: string
        tid:
          type: string
        value: {}
    BatchWriteDelete:
      type: object
      properties:
        action:
          type: string
          enum: [delete]
        collection:
          type: string
        tid:
          type: string