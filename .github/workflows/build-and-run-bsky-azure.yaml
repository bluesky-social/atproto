name: build-and-push-pds-azure
on:
  push:
    branches:
      - main

env:
  REGISTRY: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
    pds-container-azure:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main

        - name: Setup Docker buildx
          uses: docker/setup-buildx-action@v1

        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: Extract Docker metadata
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: |
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tags: |
              type=sha,enable=true,priority=100,prefix=pds:,suffix=,format=long


        - name: 'Build and push image'
          id: build-and-push
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

        - name: 'Deploy to Azure Container Instances'
          uses: 'azure/aci-deploy@v1'
          with:
            resource-group: ${{ secrets.RESOURCE_GROUP }}
            dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
            image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            registry-username: ${{ secrets.REGISTRY_USERNAME }}
            registry-password: ${{ secrets.REGISTRY_PASSWORD }}
            name: aci-${{ env.IMAGE_NAME }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            location: 'eastus2'
