{
  "$schema": "https://json.schemastore.org/tsconfig",
  "compilerOptions": {
    "checkJs": true,

    "strict": true,
    "allowUnusedLabels": false,
    "allowUnreachableCode": false,
    // @TODO For stronger type safety, next line should ideally be "true" (currently yields over 1k errors in this code base)
    "exactOptionalPropertyTypes": false,
    // "falls through" are covered by eslint (because TS does not support those comments):
    "noFallthroughCasesInSwitch": false,
    "noPropertyAccessFromIndexSignature": true,
    "noImplicitAny": true,
    // We want to allow TypeScript to infer the return type:
    "noImplicitReturns": false,
    "noUnusedLocals": true,
    "noUnusedParameters": false,

    "skipLibCheck": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "preserveSymlinks": false,
    "useDefineForClassFields": true,

    "lib": [],
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "types": [],

    "noErrorTruncation": true,
    "declaration": true,
    "declarationMap": true,
    "sourceMap": true,
    "jsx": "preserve",
    "module": "CommonJS",
    "target": "ES2020"
  },
  "typeAcquisition": {
    "enable": false
  }
}
